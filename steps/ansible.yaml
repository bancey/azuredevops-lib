parameters:
  - name: requirementsFile
    type: string
    default: ""
  - name: playbook
    type: string
    default: ""
  - name: keyVaultName
    type: string
  - name: privateKeySecretName
    type: string
  - name: serviceConnection
    type: string
  - name: secrets
    type: object
    default: {}

steps:
  - task: AzureCLI@2
    displayName: Download ${{ secret }}
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: "bash"
      addSpnToEnvironment: true
      scriptLocation: "inlineScript"
      inlineScript: |
        ${{ each secret in parameters.secrets }}
          az keyvault secret download --name ${{ secret }} --vault-name ${{ parameters.keyVaultName }} --file ${{ secret }}
      workingDirectory: $(System.DefaultWorkingDirectory)/ansible
  - task: AzureCLI@2
    displayName: Get Ansible Private Key
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: "bash"
      scriptLocation: "inlineScript"
      inlineScript: |
        az keyvault secret download --name ${{ parameters.privateKeySecretName }} --vault-name ${{ parameters.keyVaultName }} --file $(System.DefaultWorkingDirectory)/ansible/id_rsa
        chmod 600 $(System.DefaultWorkingDirectory)/ansible/id_rsa
        ls -la $(System.DefaultWorkingDirectory)/ansible
  - ? ${{ if and(ne(parameters.playbook, ''), ne(variables['Build.SourceBranch'], 'refs/heads/main')) }}
    : - task: AzureCLI@2
        displayName: Check Ansible Playbook
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: "bash"
          addSpnToEnvironment: true
          scriptLocation: "inlineScript"
          inlineScript: |
            eval `ssh-agent -s`
            ssh-add $(System.DefaultWorkingDirectory)/ansible/id_rsa
            REQUIREMENTS_FILE="${{ parameters.requirementsFile }}"
            echo "Requirements file: $REQUIREMENTS_FILE"

            if [ ! -z "$REQUIREMENTS_FILE" ]; then
              ansible-galaxy install -r $REQUIREMENTS_FILE
            fi

            ansible-playbook --syntax-check --inventory $(System.DefaultWorkingDirectory)/ansible/hosts.yaml ${{ parameters.playbook }} --extra-vars "$EXTRA_VARS"
            ansible-playbook --check --inventory $(System.DefaultWorkingDirectory)/ansible/hosts.yaml ${{ parameters.playbook }} --extra-vars "$EXTRA_VARS"
          workingDirectory: $(System.DefaultWorkingDirectory)/ansible
  - ? ${{ if and(ne(parameters.playbook, ''), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}
    : - task: AzureCLI@2
        displayName: Run Ansible Playbook
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: "bash"
          addSpnToEnvironment: true
          scriptLocation: "inlineScript"
          inlineScript: |
            eval `ssh-agent -s`
            ssh-add $(System.DefaultWorkingDirectory)/ansible/id_rsa
            REQUIREMENTS_FILE="${{ parameters.requirementsFile }}"
            echo "Requirements file: $REQUIREMENTS_FILE"

            if [ ! -z "$REQUIREMENTS_FILE" ]; then
              ansible-galaxy install -r $REQUIREMENTS_FILE
            fi

            ansible-playbook --inventory $(System.DefaultWorkingDirectory)/ansible/hosts.yaml ${{ parameters.playbook }} --extra-vars "$EXTRA_VARS"
          workingDirectory: $(System.DefaultWorkingDirectory)/ansible
